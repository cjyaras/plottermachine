// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.1.0 Build 590 10/25/2017 SJ Lite Edition"

// DATE "11/27/2019 13:14:10"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module counter (
	clk,
	out);
input 	clk;
output 	[6:0] out;

// Design Ports Information
// out[0]	=>  Location: PIN_E5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// out[1]	=>  Location: PIN_E4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// out[2]	=>  Location: PIN_C3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// out[3]	=>  Location: PIN_C5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// out[4]	=>  Location: PIN_C6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// out[5]	=>  Location: PIN_C4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// out[6]	=>  Location: PIN_D4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_J1,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \out[0]~output_o ;
wire \out[1]~output_o ;
wire \out[2]~output_o ;
wire \out[3]~output_o ;
wire \out[4]~output_o ;
wire \out[5]~output_o ;
wire \out[6]~output_o ;
wire \clk~input_o ;
wire \clk~inputclkctrl_outclk ;
wire \cnt[0]~18_combout ;
wire \cnt[1]~6_combout ;
wire \cnt[1]~7 ;
wire \cnt[2]~8_combout ;
wire \cnt[2]~9 ;
wire \cnt[3]~10_combout ;
wire \cnt[3]~11 ;
wire \cnt[4]~12_combout ;
wire \cnt[4]~13 ;
wire \cnt[5]~14_combout ;
wire \cnt[5]~15 ;
wire \cnt[6]~16_combout ;
wire [6:0] cnt;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X1_Y73_N16
cycloneive_io_obuf \out[0]~output (
	.i(cnt[0]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \out[0]~output .bus_hold = "false";
defparam \out[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X1_Y73_N9
cycloneive_io_obuf \out[1]~output (
	.i(cnt[1]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \out[1]~output .bus_hold = "false";
defparam \out[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X1_Y73_N23
cycloneive_io_obuf \out[2]~output (
	.i(cnt[2]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \out[2]~output .bus_hold = "false";
defparam \out[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X3_Y73_N9
cycloneive_io_obuf \out[3]~output (
	.i(cnt[3]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \out[3]~output .bus_hold = "false";
defparam \out[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X5_Y73_N23
cycloneive_io_obuf \out[4]~output (
	.i(cnt[4]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \out[4]~output .bus_hold = "false";
defparam \out[4]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X3_Y73_N23
cycloneive_io_obuf \out[5]~output (
	.i(cnt[5]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \out[5]~output .bus_hold = "false";
defparam \out[5]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X1_Y73_N2
cycloneive_io_obuf \out[6]~output (
	.i(cnt[6]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \out[6]~output .bus_hold = "false";
defparam \out[6]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y36_N8
cycloneive_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clk~inputclkctrl .clock_type = "global clock";
defparam \clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X2_Y72_N0
cycloneive_lcell_comb \cnt[0]~18 (
// Equation(s):
// \cnt[0]~18_combout  = !cnt[0]

	.dataa(gnd),
	.datab(gnd),
	.datac(cnt[0]),
	.datad(gnd),
	.cin(gnd),
	.combout(\cnt[0]~18_combout ),
	.cout());
// synopsys translate_off
defparam \cnt[0]~18 .lut_mask = 16'h0F0F;
defparam \cnt[0]~18 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X2_Y72_N1
dffeas \cnt[0] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\cnt[0]~18_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[0]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[0] .is_wysiwyg = "true";
defparam \cnt[0] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X2_Y72_N6
cycloneive_lcell_comb \cnt[1]~6 (
// Equation(s):
// \cnt[1]~6_combout  = (cnt[1] & (cnt[0] $ (VCC))) # (!cnt[1] & (cnt[0] & VCC))
// \cnt[1]~7  = CARRY((cnt[1] & cnt[0]))

	.dataa(cnt[1]),
	.datab(cnt[0]),
	.datac(gnd),
	.datad(vcc),
	.cin(gnd),
	.combout(\cnt[1]~6_combout ),
	.cout(\cnt[1]~7 ));
// synopsys translate_off
defparam \cnt[1]~6 .lut_mask = 16'h6688;
defparam \cnt[1]~6 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X2_Y72_N7
dffeas \cnt[1] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\cnt[1]~6_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[1]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[1] .is_wysiwyg = "true";
defparam \cnt[1] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X2_Y72_N8
cycloneive_lcell_comb \cnt[2]~8 (
// Equation(s):
// \cnt[2]~8_combout  = (cnt[2] & (!\cnt[1]~7 )) # (!cnt[2] & ((\cnt[1]~7 ) # (GND)))
// \cnt[2]~9  = CARRY((!\cnt[1]~7 ) # (!cnt[2]))

	.dataa(gnd),
	.datab(cnt[2]),
	.datac(gnd),
	.datad(vcc),
	.cin(\cnt[1]~7 ),
	.combout(\cnt[2]~8_combout ),
	.cout(\cnt[2]~9 ));
// synopsys translate_off
defparam \cnt[2]~8 .lut_mask = 16'h3C3F;
defparam \cnt[2]~8 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X2_Y72_N9
dffeas \cnt[2] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\cnt[2]~8_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[2]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[2] .is_wysiwyg = "true";
defparam \cnt[2] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X2_Y72_N10
cycloneive_lcell_comb \cnt[3]~10 (
// Equation(s):
// \cnt[3]~10_combout  = (cnt[3] & (\cnt[2]~9  $ (GND))) # (!cnt[3] & (!\cnt[2]~9  & VCC))
// \cnt[3]~11  = CARRY((cnt[3] & !\cnt[2]~9 ))

	.dataa(cnt[3]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\cnt[2]~9 ),
	.combout(\cnt[3]~10_combout ),
	.cout(\cnt[3]~11 ));
// synopsys translate_off
defparam \cnt[3]~10 .lut_mask = 16'hA50A;
defparam \cnt[3]~10 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X2_Y72_N11
dffeas \cnt[3] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\cnt[3]~10_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[3]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[3] .is_wysiwyg = "true";
defparam \cnt[3] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X2_Y72_N12
cycloneive_lcell_comb \cnt[4]~12 (
// Equation(s):
// \cnt[4]~12_combout  = (cnt[4] & (!\cnt[3]~11 )) # (!cnt[4] & ((\cnt[3]~11 ) # (GND)))
// \cnt[4]~13  = CARRY((!\cnt[3]~11 ) # (!cnt[4]))

	.dataa(cnt[4]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\cnt[3]~11 ),
	.combout(\cnt[4]~12_combout ),
	.cout(\cnt[4]~13 ));
// synopsys translate_off
defparam \cnt[4]~12 .lut_mask = 16'h5A5F;
defparam \cnt[4]~12 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X2_Y72_N13
dffeas \cnt[4] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\cnt[4]~12_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[4]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[4] .is_wysiwyg = "true";
defparam \cnt[4] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X2_Y72_N14
cycloneive_lcell_comb \cnt[5]~14 (
// Equation(s):
// \cnt[5]~14_combout  = (cnt[5] & (\cnt[4]~13  $ (GND))) # (!cnt[5] & (!\cnt[4]~13  & VCC))
// \cnt[5]~15  = CARRY((cnt[5] & !\cnt[4]~13 ))

	.dataa(gnd),
	.datab(cnt[5]),
	.datac(gnd),
	.datad(vcc),
	.cin(\cnt[4]~13 ),
	.combout(\cnt[5]~14_combout ),
	.cout(\cnt[5]~15 ));
// synopsys translate_off
defparam \cnt[5]~14 .lut_mask = 16'hC30C;
defparam \cnt[5]~14 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X2_Y72_N15
dffeas \cnt[5] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\cnt[5]~14_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[5]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[5] .is_wysiwyg = "true";
defparam \cnt[5] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X2_Y72_N16
cycloneive_lcell_comb \cnt[6]~16 (
// Equation(s):
// \cnt[6]~16_combout  = \cnt[5]~15  $ (cnt[6])

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(cnt[6]),
	.cin(\cnt[5]~15 ),
	.combout(\cnt[6]~16_combout ),
	.cout());
// synopsys translate_off
defparam \cnt[6]~16 .lut_mask = 16'h0FF0;
defparam \cnt[6]~16 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X2_Y72_N17
dffeas \cnt[6] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\cnt[6]~16_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[6]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[6] .is_wysiwyg = "true";
defparam \cnt[6] .power_up = "low";
// synopsys translate_on

assign out[0] = \out[0]~output_o ;

assign out[1] = \out[1]~output_o ;

assign out[2] = \out[2]~output_o ;

assign out[3] = \out[3]~output_o ;

assign out[4] = \out[4]~output_o ;

assign out[5] = \out[5]~output_o ;

assign out[6] = \out[6]~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_F4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_E2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_P3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_N7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_P28,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
